<local:WindowBase x:Class="Client.MVVM.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client.MVVM.View" 
        xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
        xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs"
        xmlns:resource="clr-namespace:Client.MVVM.Resources"
        xmlns:viewModel="clr-namespace:Client.MVVM.ViewModel"
        mc:Ignorable="d"
        Title="LeagueBroadcast" Height="720" Width="1280"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Background="{StaticResource BackgroundColorBrush}"
        ResizeMode="CanMinimize">

    <Window.DataContext>
        <viewModel:MainViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Border Grid.ColumnSpan="2" Background="{StaticResource VeryDarkBackgroundColorBrush}">

            <Grid HorizontalAlignment="Stretch" MouseLeftButtonDown="HeaderBar_MouseDown">
                <Image Source="pack://application:,,,/Assets/Images/BE_Icon.png" HorizontalAlignment="Left" Margin="10,4,0,4"/>
                <Label Content="League Broadcast" Foreground="Gray" FontWeight="SemiBold" Margin="30,-1,0,0"/>
                <Button Width="20" Height="20" 
                            Content="⛭" 
                            Background="Transparent" 
                            BorderThickness="0" 
                            Foreground="Gray" 
                            FontWeight="Black"
                            Margin="135,0,0,0"
                            Click="OpenSettingsWindow_Click"
                        HorizontalAlignment="Left"/>

                <StackPanel HorizontalAlignment="Right" 
                            Orientation="Horizontal">

                    <Button x:Name="ConnectionStatus"
                            Height="22"
                            Style="{StaticResource ConnectionStatusTheme}"
                            DataContext="{Binding Path=ConnectionStatus}" 
                            Background="{Binding Path=BackgroundColor}"
                            BorderBrush="{Binding Path=BorderColor}"
                            BorderThickness="{Binding Path=BorderThickness}"
                            Foreground="{Binding Path=TextColor}"
                            Content="{Binding Path=TextContent}"
                            FontSize="11"
                            Margin="0,0,50,0"/>

                    <Button Width="20" Height="20" 
                            Content="🗕" 
                            Background="Transparent" 
                            BorderThickness="0" 
                            Foreground="Gray" 
                            FontWeight="Black"
                            Margin="0,0,0,2.5"
                            Click="MinimizeApp_Click"/>
                    <Button Width="20" Height="20" 
                            Content="☐" 
                            Background="Transparent" 
                            BorderThickness="0" 
                            Foreground="Gray" 
                            FontWeight="Black"
                            Margin="0,0,0,0"
                            Click="AppState_Click"/>
                    <Button Width="20" Height="20" 
                            Content="✕" 
                            Background="Transparent" 
                            BorderThickness="0" 
                            Foreground="Gray" 
                            FontWeight="Black"
                            Margin="0,0,0,0"
                            Click="ExitApp_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <Grid x:Name="MainContent" Grid.Row="2" Grid.Column="1">
            <ct:ChromeTabControl x:Name="MainTabControl"
                                 MinimumTabWidth="100"
                                 MaximumTabWidth="600"
                                 TabPersistBehavior="Timed"
                                 TabPersistDuration="0:0:0:5"
                                 AddTabButtonBehavior="OpenNewTab"
                                 Background="{StaticResource DarkBackgroundColorBrush}"
                                 ItemsSource="{Binding ItemCollection}"
                                 SelectedItem="{Binding SelectedTab}"
                                 SelectedTabBrush="{StaticResource BackgroundColorBrush}"
                                 CanMoveTabs="{Binding CanMoveTabs}"
                                 DragWindowWithOneTab="True"
                                 IsAddButtonVisible="{Binding ShowAddButton}"
                                 AddTabCommand="{Binding AddTabCommand}"
                                 CloseTabCommand="{Binding CloseTabCommand}"
                                 ReorderTabsCommand="{Binding ReorderTabsCommand}"
                                 TabTearTriggerDistance="10"
                                 TabDraggedOutsideBonds="TabControl_TabDraggedOutsideBonds"
                                 ItemContainerStyle="{StaticResource CustomTabItemStyle}">
                <!--We override the control template here to show how you can modify the properties of tab panel and content presenter-->
                <ct:ChromeTabControl.Template>
                    <ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
                        <ControlTemplate.Resources>
                            <ctConv:TabPersistBehaviorToContentPresenterVisibilityConverter x:Key="TabPersistBehaviorToContentPresenterVisibilityConverter" />
                            <ctConv:TabPersistBehaviorToItemHolderVisibilityConverter x:Key="TabPersistBehaviorToItemHolderVisibilityConverter" />
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="0,0,0,1"
                                    BorderBrush="{StaticResource PrimaryHighlightColorBrush}"
                                    Grid.Row="0"
                                    Padding="10,5,10,0">
                                <ct:ChromeTabPanel IsItemsHost="True"
                                                   Background="{TemplateBinding Background}" />
                            </Border>

                            <Grid Grid.Row="1"
                                  Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToContentPresenterVisibilityConverter}}">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                            </Grid>
                            <Grid x:Name="PART_ItemsHolder"
                                  Grid.Row="1"
                                  Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToItemHolderVisibilityConverter}}" />
                        </Grid>
                    </ControlTemplate>
                </ct:ChromeTabControl.Template>
                <!--We must override the item template to show our tab name in the header. Here we use a simple
            textblock, but you could put any combination of controls here. Uncomment the orange border to show
            the bounds of the header content presenter-->
                <ct:ChromeTabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

                                <StackPanel Orientation="Horizontal"
                                            Background="Transparent"
                                            HorizontalAlignment="Center">
                                    <Image Source="{Binding TabIcon}"
                                           Stretch="Fill"
                                           Margin="5,5,5,5" />
                                    <TextBlock Text="{Binding TabName}"
                                               TextWrapping="NoWrap"
                                               Foreground="White"
                                               FontSize="18"
                                               FontWeight="SemiBold" 
                                               TextTrimming="CharacterEllipsis"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                                </StackPanel>

                                <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Close"
                                              Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <MenuItem Header="Close all"
                                              Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <MenuItem Header="Close other tabs"
                                              Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              CommandParameter="{Binding}" />

                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ct:ChromeTabControl.ItemTemplate>
            </ct:ChromeTabControl>
            <Rectangle x:Name="DarkenContentRect" Fill="{StaticResource VeryDarkBackgroundColorBrush}" Opacity=".6" Visibility="Hidden"/>
        </Grid>
    </Grid>
</local:WindowBase>
